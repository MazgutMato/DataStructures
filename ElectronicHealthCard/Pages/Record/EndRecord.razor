@page "/recordEnd"
@inject HospitalizationRecordsController hospitalizationRecordsController
@inject HospitalsController hospitalController
@inject PatientsController patientController

<PageTitle>QuitRecord</PageTitle>

<EditForm Model="@Hospital">
    <DataAnnotationsValidator />
    <h3>Quit Record</h3>
    <hr />
    <div class="form-group">
        <label for="name">
            Hospital name
        </label>
        <div>
            <InputText id="name" class="form-control" placeholder="Hospital name"
                       @bind-Value="Hospital.Name" />
            <ValidationMessage For="@(() => Hospital.Name)" />
        </div>
    </div>
</EditForm>

<EditForm Model="@Patient">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="patientId">
            Patient Id
        </label>
        <div>
            <InputText id="patientId" class="form-control" placeholder="Patient Id"
                       @bind-Value="Patient.PatientId" />
            <ValidationMessage For="@(() => Patient.PatientId)" />
        </div>
    </div>
</EditForm>

<EditForm Model="@Record">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="date">
            Date of hospitalization
        </label>
        <div>
            <InputDate id="date" class="form-control" placeholder="Date"
                       @bind-Value="Record.Start" />
            <ValidationMessage For="@(() => Record.Start)" />
        </div>
    </div>
    <div class="form-group">
        <label for="date">
            Date of ending hospitalization
        </label>
        <div>
            <InputDate id="date" class="form-control" placeholder="Date"
                       @bind-Value="Record.End" />
            <ValidationMessage For="@(() => Record.End)" />
        </div>
    </div>
</EditForm>

<div class="mt-2">
    <button class="btn btn-primary" @onclick="SubmitForm">
        Quit
    </button>
</div>

@if (Message != null)
{
    <p>@Message</p>
}

@code {
    private Hospital Hospital { get; set; } = new Hospital();
    private Patient Patient = new Patient();
    private Record Record = new Record();
    private string Message { get; set; } = null;

    private void SubmitForm()
    {
        if (Hospital.Name == null)
        {
            Message = "Hospital name cannot be empty!";
            return;
        }
        var FindHospital = hospitalController.FindHospital(Hospital);
        if (FindHospital == null)
        {
            Message = "Hospital not found!";
            return;
        }

        if (Patient.PatientId == null)
        {
            Message = "Patient Id name cannot be empty!";
            return;
        }
        var FindPatient = patientController.FindPatient(Patient);
        if (FindPatient == null)
        {
            Message = "Patient not found!";
            return;
        }
        if (FindPatient.ActualRecord == null)
        {
            Message = "Patient is not curently hospitalized!";
            return;
        }

        if (Record.Start > Record.End)
        {
            Message = "The start date must be earlier then the end date!";
            return;
        }

        if (hospitalizationRecordsController.EndRecord(FindHospital, FindPatient, Record))
        {           
            Message = "Record was quit!";
        }
        else
        {
            Message = "Record with the hospitalization date not exists!";
        }
    }
}
