@page "/dataGenerator"
@inject HospitalizationRecordsController hospitalizationRecordsController
@inject HospitalsController hospitalController
@inject PatientsController patientController

<PageTitle>DataGenerator</PageTitle>

<EditForm Model="@GeneratorModel" OnValidSubmit="GeneratorSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <h3>Generate data</h3>
    <hr />
    <div class="form-group mb-2">
        <label for="hospitals">
            Number of hospitals
        </label>
        <div>
            <InputNumber id="hospitals" class="form-control" placeholder="Number of hospitals"
                       @bind-Value="GeneratorModel.Hospital" />
        </div>
    </div>
    <div class="form-group row">
        <label for="patientNumber">
            Number of patients
        </label>
        <div>
            <InputNumber id="patientNumber" class="form-control"
                         placeholder="Number of patients"
                       @bind-Value="GeneratorModel.Patient" />
        </div>
    </div>
    <div class="form-group row mb-2">
        <label for="minPatient">
            Minimal number of active patients in hospital
        </label>
        <div>
            <InputNumber id="minPatient" class="form-control"
                         placeholder="Minimal number of active patients in hospital"
                       @bind-Value="GeneratorModel.MinActivePatient" />
        </div>
    </div>
    <div class="form-group row mb-2">
        <label for="maxPatient">
            Maximal number of active patients in hospital
        </label>
        <div>
            <InputNumber id="maxPatient" class="form-control"
                         placeholder="Maximal number of active patients in hospital"
                         @bind-Value="GeneratorModel.MaxActivePatient" />
        </div>
    </div>
    <div class="form-group row mb-2">
        <label for="minRecord">
            Minimal number of patient records
        </label>
        <div>
            <InputNumber id="minRecord" class="form-control"
                         placeholder="Minimal number of patient records"
                         @bind-Value="GeneratorModel.MinEndedRecord" />
        </div>
    </div>
    <div class="form-group row mb-2">
        <label for="maxRecord">
            Maximal number of patient records
        </label>
        <div>
            <InputNumber id="maxRecord" class="form-control"
                         placeholder="Maximal number of patient records"
                         @bind-Value="GeneratorModel.MaxEndedRecord" />
        </div>
    </div>
    <div>
        <button type="submit" class="btn btn-primary">Add</button>
    </div>
    @if (Message != null)
    {
        <p>@Message</p>
    }
</EditForm>

@code {
    private Generator GeneratorModel = new Generator();
    private string Message { get; set; } = null;

    public void GeneratorSubmit()
    {
        if(hospitalizationRecordsController.GetCount() > 0 || hospitalController.GetCount() > 0 ||
            patientController.GetCount() > 0){
            Message = "Data are alredy generated!";
            return;
        }
        Message = "";
        //Validation
        if (GeneratorModel.Hospital < 1){
            Message = "Number of hospitals must be greather then 0!";
            return;
        }
        if (GeneratorModel.Patient < 1)
        {
            Message = "Number of patients must be greather then 0!";
            return;
        }
        if (GeneratorModel.MinActivePatient < 1)
        {
            Message = "Minimal number of active patients must be greather then 0!";
            return;
        }
        if (GeneratorModel.MaxActivePatient < 1 || GeneratorModel.MinActivePatient > GeneratorModel.MaxActivePatient 
           || GeneratorModel.Patient < GeneratorModel.MaxActivePatient)
        {
            Message = "Maximal number of active patients must be greather then 0 and minimal number! Maximal number of active patients must be less then number of patients!";
            return;
        }
        if (GeneratorModel.MinEndedRecord < 1)
        {
            Message = "Minimal number of ended records must be greather then 0!";
            return;
        }
        if (GeneratorModel.MaxEndedRecord < 1 || GeneratorModel.MinEndedRecord > GeneratorModel.MaxEndedRecord)
        {
            Message = "Maximal number of ended records must be greather then 0 and minimal number!";
            return;
        }
        Message = "Data generating! Wait!";
        var genController = new GeneratorController(GeneratorModel);
        genController.GenerateData(hospitalizationRecordsController, patientController, hospitalController);
        Message = "Data was generated!";
    }
}
